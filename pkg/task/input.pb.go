// Code generated by protoc-gen-go. DO NOT EDIT.
// source: input.proto

package task

import (
	fmt "fmt"
	annotatedvalue "github.com/AljabrIO/koalja-operator/pkg/annotatedvalue"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NextRequest struct {
	// WaitTimeout is the maximum amount of time that the called
	// is prepared to wait for an answer.
	WaitTimeout          *duration.Duration `protobuf:"bytes,1,opt,name=WaitTimeout,proto3" json:"WaitTimeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NextRequest) Reset()         { *m = NextRequest{} }
func (m *NextRequest) String() string { return proto.CompactTextString(m) }
func (*NextRequest) ProtoMessage()    {}
func (*NextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db6f7669dced820e, []int{0}
}

func (m *NextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NextRequest.Unmarshal(m, b)
}
func (m *NextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NextRequest.Marshal(b, m, deterministic)
}
func (m *NextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NextRequest.Merge(m, src)
}
func (m *NextRequest) XXX_Size() int {
	return xxx_messageInfo_NextRequest.Size(m)
}
func (m *NextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NextRequest proto.InternalMessageInfo

func (m *NextRequest) GetWaitTimeout() *duration.Duration {
	if m != nil {
		return m.WaitTimeout
	}
	return nil
}

type NextResponse struct {
	// If set, Snapshot holds the next snapshot.
	Snapshot *Snapshot `protobuf:"bytes,1,opt,name=Snapshot,proto3" json:"Snapshot,omitempty"`
	// If Snapshot is not set, NoSnapshotYet is set to true to indicate
	// that was is no snapshot available within the timeout specified
	// in the request.
	NoSnapshotYet        bool     `protobuf:"varint,2,opt,name=NoSnapshotYet,proto3" json:"NoSnapshotYet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NextResponse) Reset()         { *m = NextResponse{} }
func (m *NextResponse) String() string { return proto.CompactTextString(m) }
func (*NextResponse) ProtoMessage()    {}
func (*NextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_db6f7669dced820e, []int{1}
}

func (m *NextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NextResponse.Unmarshal(m, b)
}
func (m *NextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NextResponse.Marshal(b, m, deterministic)
}
func (m *NextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NextResponse.Merge(m, src)
}
func (m *NextResponse) XXX_Size() int {
	return xxx_messageInfo_NextResponse.Size(m)
}
func (m *NextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NextResponse proto.InternalMessageInfo

func (m *NextResponse) GetSnapshot() *Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *NextResponse) GetNoSnapshotYet() bool {
	if m != nil {
		return m.NoSnapshotYet
	}
	return false
}

type AckRequest struct {
	SnapshotID           string   `protobuf:"bytes,1,opt,name=SnapshotID,proto3" json:"SnapshotID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckRequest) Reset()         { *m = AckRequest{} }
func (m *AckRequest) String() string { return proto.CompactTextString(m) }
func (*AckRequest) ProtoMessage()    {}
func (*AckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db6f7669dced820e, []int{2}
}

func (m *AckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckRequest.Unmarshal(m, b)
}
func (m *AckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckRequest.Marshal(b, m, deterministic)
}
func (m *AckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckRequest.Merge(m, src)
}
func (m *AckRequest) XXX_Size() int {
	return xxx_messageInfo_AckRequest.Size(m)
}
func (m *AckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckRequest proto.InternalMessageInfo

func (m *AckRequest) GetSnapshotID() string {
	if m != nil {
		return m.SnapshotID
	}
	return ""
}

// Snapshot is a set of sequences of annotated values for every
// input of a task.
type Snapshot struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Inputs               []*SnapshotInputPair `protobuf:"bytes,2,rep,name=Inputs,proto3" json:"Inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_db6f7669dced820e, []int{3}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Snapshot) GetInputs() []*SnapshotInputPair {
	if m != nil {
		return m.Inputs
	}
	return nil
}

// SnapshotInputPair is a sequences of annotated value for a specific
// task input with given name.
type SnapshotInputPair struct {
	InputName            string                           `protobuf:"bytes,1,opt,name=InputName,proto3" json:"InputName,omitempty"`
	AnnotatedValues      []*annotatedvalue.AnnotatedValue `protobuf:"bytes,2,rep,name=AnnotatedValues,proto3" json:"AnnotatedValues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *SnapshotInputPair) Reset()         { *m = SnapshotInputPair{} }
func (m *SnapshotInputPair) String() string { return proto.CompactTextString(m) }
func (*SnapshotInputPair) ProtoMessage()    {}
func (*SnapshotInputPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_db6f7669dced820e, []int{4}
}

func (m *SnapshotInputPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotInputPair.Unmarshal(m, b)
}
func (m *SnapshotInputPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotInputPair.Marshal(b, m, deterministic)
}
func (m *SnapshotInputPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotInputPair.Merge(m, src)
}
func (m *SnapshotInputPair) XXX_Size() int {
	return xxx_messageInfo_SnapshotInputPair.Size(m)
}
func (m *SnapshotInputPair) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotInputPair.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotInputPair proto.InternalMessageInfo

func (m *SnapshotInputPair) GetInputName() string {
	if m != nil {
		return m.InputName
	}
	return ""
}

func (m *SnapshotInputPair) GetAnnotatedValues() []*annotatedvalue.AnnotatedValue {
	if m != nil {
		return m.AnnotatedValues
	}
	return nil
}

func init() {
	proto.RegisterType((*NextRequest)(nil), "task.NextRequest")
	proto.RegisterType((*NextResponse)(nil), "task.NextResponse")
	proto.RegisterType((*AckRequest)(nil), "task.AckRequest")
	proto.RegisterType((*Snapshot)(nil), "task.Snapshot")
	proto.RegisterType((*SnapshotInputPair)(nil), "task.SnapshotInputPair")
}

func init() { proto.RegisterFile("input.proto", fileDescriptor_db6f7669dced820e) }

var fileDescriptor_db6f7669dced820e = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x8f, 0xd2, 0x40,
	0x14, 0x0d, 0xdd, 0xcd, 0x66, 0xf7, 0x56, 0x77, 0xdd, 0x79, 0x50, 0x6c, 0x0c, 0x21, 0x8d, 0x0f,
	0xc4, 0xc0, 0x4c, 0x02, 0x4f, 0xc6, 0xa7, 0x1a, 0x4c, 0xac, 0x24, 0x68, 0x8a, 0xd1, 0xe8, 0x93,
	0xd3, 0x32, 0x94, 0xd2, 0x8f, 0x19, 0xda, 0x19, 0x22, 0xf1, 0xcf, 0x9b, 0x7e, 0x0c, 0x14, 0x78,
	0xd0, 0x17, 0xc2, 0xbd, 0xe7, 0x9e, 0x73, 0x6f, 0xcf, 0x19, 0x30, 0xa3, 0x4c, 0x28, 0x89, 0x45,
	0xce, 0x25, 0x47, 0xd7, 0x92, 0x16, 0xb1, 0xf5, 0x36, 0x8c, 0xe4, 0x5a, 0xf9, 0x38, 0xe0, 0x29,
	0x09, 0x79, 0x42, 0xb3, 0x90, 0x54, 0xb0, 0xaf, 0x56, 0x44, 0xc8, 0xbd, 0x60, 0x05, 0x59, 0xaa,
	0x9c, 0xca, 0x88, 0x67, 0x87, 0x3f, 0xb5, 0x80, 0x35, 0xf9, 0x37, 0x95, 0xa5, 0x42, 0xee, 0xeb,
	0xdf, 0x86, 0x34, 0x6b, 0x91, 0x9c, 0x64, 0x43, 0xfd, 0xdc, 0xfd, 0x4c, 0x62, 0x4e, 0x93, 0x0d,
	0x1d, 0x71, 0xc1, 0x72, 0x2a, 0x79, 0x4e, 0x44, 0x1c, 0x12, 0x9a, 0x65, 0x5c, 0x52, 0xc9, 0x96,
	0x3b, 0x9a, 0x28, 0x76, 0x56, 0xd6, 0x62, 0xf6, 0x27, 0x30, 0xe7, 0xec, 0xb7, 0xf4, 0xd8, 0x56,
	0xb1, 0x42, 0xa2, 0x77, 0x60, 0x7e, 0xa7, 0x91, 0xfc, 0x1a, 0xa5, 0x8c, 0x2b, 0xd9, 0xed, 0xf4,
	0x3b, 0x03, 0x73, 0xfc, 0x12, 0x87, 0x9c, 0x87, 0x49, 0x43, 0xf1, 0xd5, 0x0a, 0x4f, 0x9b, 0xcf,
	0xf0, 0xda, 0xd3, 0xf6, 0x2f, 0x78, 0x52, 0x6b, 0x15, 0x82, 0x67, 0x05, 0x43, 0x6f, 0xe0, 0x76,
	0x91, 0x51, 0x51, 0xac, 0xb9, 0x56, 0xba, 0xc7, 0xa5, 0x63, 0x58, 0x77, 0xbd, 0x03, 0x8e, 0x5e,
	0xc3, 0xd3, 0x39, 0xd7, 0xd5, 0x0f, 0x26, 0xbb, 0x46, 0xbf, 0x33, 0xb8, 0xf5, 0x4e, 0x9b, 0xf6,
	0x10, 0xc0, 0x09, 0x62, 0x7d, 0x6c, 0x0f, 0x40, 0x83, 0xee, 0xb4, 0xda, 0x70, 0xe7, 0xb5, 0x3a,
	0xf6, 0xec, 0xb8, 0x1f, 0xdd, 0x83, 0x71, 0x98, 0x31, 0xdc, 0x29, 0x22, 0x70, 0xe3, 0x96, 0x49,
	0x16, 0x5d, 0xa3, 0x7f, 0x35, 0x30, 0xc7, 0x2f, 0x4e, 0x2f, 0xab, 0xb0, 0x2f, 0x34, 0xca, 0xbd,
	0x66, 0xcc, 0xfe, 0x03, 0x8f, 0x17, 0x20, 0x7a, 0x05, 0x77, 0x55, 0x31, 0xa7, 0x29, 0x6b, 0xc4,
	0x8f, 0x0d, 0xf4, 0x11, 0x1e, 0x1c, 0xed, 0xf9, 0xb7, 0xd2, 0x73, 0xbd, 0xac, 0x87, 0xcf, 0xb2,
	0x38, 0x1d, 0xf3, 0xce, 0x69, 0xe3, 0x2d, 0x3c, 0xe8, 0xe5, 0x0b, 0x96, 0xef, 0xa2, 0x80, 0xa1,
	0x11, 0x5c, 0x97, 0x66, 0xa3, 0xc7, 0xfa, 0xf0, 0x56, 0x88, 0x16, 0x6a, 0xb7, 0x9a, 0x2c, 0x08,
	0x5c, 0x39, 0x41, 0x8c, 0x9e, 0xd5, 0xd0, 0xd1, 0x44, 0xeb, 0xf9, 0x45, 0xb8, 0x1f, 0xca, 0xb7,
	0xf6, 0x1e, 0xff, 0x1c, 0xfe, 0xef, 0x3b, 0x2b, 0x25, 0xfd, 0x9b, 0x8a, 0x3f, 0xf9, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xcc, 0x10, 0xed, 0x4a, 0x21, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SnapshotServiceClient is the client API for SnapshotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnapshotServiceClient interface {
	// Next pulls the task agent for the next available snapshot.
	Next(ctx context.Context, in *NextRequest, opts ...grpc.CallOption) (*NextResponse, error)
	// Acknowledge the processing of a snapshot
	Ack(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type snapshotServiceClient struct {
	cc *grpc.ClientConn
}

func NewSnapshotServiceClient(cc *grpc.ClientConn) SnapshotServiceClient {
	return &snapshotServiceClient{cc}
}

func (c *snapshotServiceClient) Next(ctx context.Context, in *NextRequest, opts ...grpc.CallOption) (*NextResponse, error) {
	out := new(NextResponse)
	err := c.cc.Invoke(ctx, "/task.SnapshotService/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *snapshotServiceClient) Ack(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task.SnapshotService/Ack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnapshotServiceServer is the server API for SnapshotService service.
type SnapshotServiceServer interface {
	// Next pulls the task agent for the next available snapshot.
	Next(context.Context, *NextRequest) (*NextResponse, error)
	// Acknowledge the processing of a snapshot
	Ack(context.Context, *AckRequest) (*empty.Empty, error)
}

func RegisterSnapshotServiceServer(s *grpc.Server, srv SnapshotServiceServer) {
	s.RegisterService(&_SnapshotService_serviceDesc, srv)
}

func _SnapshotService_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotServiceServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.SnapshotService/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotServiceServer).Next(ctx, req.(*NextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SnapshotService_Ack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnapshotServiceServer).Ack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.SnapshotService/Ack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnapshotServiceServer).Ack(ctx, req.(*AckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnapshotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task.SnapshotService",
	HandlerType: (*SnapshotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Next",
			Handler:    _SnapshotService_Next_Handler,
		},
		{
			MethodName: "Ack",
			Handler:    _SnapshotService_Ack_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "input.proto",
}
