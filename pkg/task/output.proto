syntax = "proto3";

package task;

option go_package = "github.com/AljabrIO/koalja-operator/pkg/task";

import "github.com/golang/protobuf/ptypes/duration/duration.proto";

// OutputReadyNotifier is the API used by task executors to notify
// a task agent of the availability of an output.
service OutputReadyNotifier {
    // OutputReady signals the task agent that an output is ready for publication
    // into a link.
    rpc OutputReady(OutputReadyRequest) returns (OutputReadyResponse);
}

message OutputReadyRequest {
    // Data (content) of the annotated value.
    string AnnotatedValueData = 1;
    // Name of the task output that is data belongs to.
    string OutputName = 2;
}

message OutputReadyResponse {
    // Accepted is true if the task agent accepted the output.
    // If false, the executor should try to notify the task agent
    // again after a timeout.
    bool Accepted = 1;
    // ID of the published annotated value
    string AnnotatedValueID = 2;
}

// OutputFileSystemService is the API provided by the task agent to
// task executors regarding filesystem services.
service OutputFileSystemService {
    // CreateFileURI creates a URI for the given file/dir 
    rpc CreateFileURI(CreateFileURIRequest) returns (CreateFileURIResponse);
}

message CreateFileURIRequest {
    // Name of the task output that is data belongs to.
    string OutputName = 2;
    // Local path of the file/dir in the Volume
    string LocalPath = 7;
    // IsDir indicates if the URI is for a file (false) or a directory (true)
    bool IsDir = 8;
}

message CreateFileURIResponse {
    // The created URI
    string URI = 1;
}
