// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fs.proto

package fs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CreateVolumeForWriteRequest contains arguments for CreateVolumeForWrite.
type CreateVolumeForWriteRequest struct {
	// Estimated capacity (in bytes) of the data that will be written
	EstimatedCapacity int64 `protobuf:"varint,1,opt,name=EstimatedCapacity,proto3" json:"EstimatedCapacity,omitempty"`
	// Name of the Node on which the PV must reside.
	// If not set, a random node is picked.
	NodeName             string   `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeForWriteRequest) Reset()         { *m = CreateVolumeForWriteRequest{} }
func (m *CreateVolumeForWriteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeForWriteRequest) ProtoMessage()    {}
func (*CreateVolumeForWriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{0}
}

func (m *CreateVolumeForWriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeForWriteRequest.Unmarshal(m, b)
}
func (m *CreateVolumeForWriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeForWriteRequest.Marshal(b, m, deterministic)
}
func (m *CreateVolumeForWriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeForWriteRequest.Merge(m, src)
}
func (m *CreateVolumeForWriteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeForWriteRequest.Size(m)
}
func (m *CreateVolumeForWriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeForWriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeForWriteRequest proto.InternalMessageInfo

func (m *CreateVolumeForWriteRequest) GetEstimatedCapacity() int64 {
	if m != nil {
		return m.EstimatedCapacity
	}
	return 0
}

func (m *CreateVolumeForWriteRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

// CreateVolumeForWriteResponse contains results for CreateVolumeForWrite.
type CreateVolumeForWriteResponse struct {
	// Name of the created PersistentVolume
	VolumeName string `protobuf:"bytes,1,opt,name=VolumeName,proto3" json:"VolumeName,omitempty"`
	// Name of the Node on which the volume is created
	NodeName             string   `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeForWriteResponse) Reset()         { *m = CreateVolumeForWriteResponse{} }
func (m *CreateVolumeForWriteResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeForWriteResponse) ProtoMessage()    {}
func (*CreateVolumeForWriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{1}
}

func (m *CreateVolumeForWriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeForWriteResponse.Unmarshal(m, b)
}
func (m *CreateVolumeForWriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeForWriteResponse.Marshal(b, m, deterministic)
}
func (m *CreateVolumeForWriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeForWriteResponse.Merge(m, src)
}
func (m *CreateVolumeForWriteResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeForWriteResponse.Size(m)
}
func (m *CreateVolumeForWriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeForWriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeForWriteResponse proto.InternalMessageInfo

func (m *CreateVolumeForWriteResponse) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *CreateVolumeForWriteResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

// CreateFileURIRequest contains arguments for CreateFileURI
type CreateFileURIRequest struct {
	// Name of the PersistentVolume that contains the file/dir
	VolumeName string `protobuf:"bytes,1,opt,name=VolumeName,proto3" json:"VolumeName,omitempty"`
	// Name of the Node on which the volume resides
	NodeName string `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	// Local path of the file/dir in the PersistentVolume
	LocalPath string `protobuf:"bytes,3,opt,name=LocalPath,proto3" json:"LocalPath,omitempty"`
	// IsDir indicates if the URI is for a file (false) or a directory (true)
	IsDir                bool     `protobuf:"varint,4,opt,name=IsDir,proto3" json:"IsDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFileURIRequest) Reset()         { *m = CreateFileURIRequest{} }
func (m *CreateFileURIRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFileURIRequest) ProtoMessage()    {}
func (*CreateFileURIRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{2}
}

func (m *CreateFileURIRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileURIRequest.Unmarshal(m, b)
}
func (m *CreateFileURIRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileURIRequest.Marshal(b, m, deterministic)
}
func (m *CreateFileURIRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileURIRequest.Merge(m, src)
}
func (m *CreateFileURIRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFileURIRequest.Size(m)
}
func (m *CreateFileURIRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileURIRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileURIRequest proto.InternalMessageInfo

func (m *CreateFileURIRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *CreateFileURIRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateFileURIRequest) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *CreateFileURIRequest) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

// CreateFileURIRequest contains results for CreateFileURI
type CreateFileURIResponse struct {
	// The created URI
	URI                  string   `protobuf:"bytes,1,opt,name=URI,proto3" json:"URI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFileURIResponse) Reset()         { *m = CreateFileURIResponse{} }
func (m *CreateFileURIResponse) String() string { return proto.CompactTextString(m) }
func (*CreateFileURIResponse) ProtoMessage()    {}
func (*CreateFileURIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{3}
}

func (m *CreateFileURIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileURIResponse.Unmarshal(m, b)
}
func (m *CreateFileURIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileURIResponse.Marshal(b, m, deterministic)
}
func (m *CreateFileURIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileURIResponse.Merge(m, src)
}
func (m *CreateFileURIResponse) XXX_Size() int {
	return xxx_messageInfo_CreateFileURIResponse.Size(m)
}
func (m *CreateFileURIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileURIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileURIResponse proto.InternalMessageInfo

func (m *CreateFileURIResponse) GetURI() string {
	if m != nil {
		return m.URI
	}
	return ""
}

// CreateVolumeForReadRequest contains arguments for CreateVolumeForRead
type CreateVolumeForReadRequest struct {
	// The URI to read
	URI                  string   `protobuf:"bytes,1,opt,name=URI,proto3" json:"URI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeForReadRequest) Reset()         { *m = CreateVolumeForReadRequest{} }
func (m *CreateVolumeForReadRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeForReadRequest) ProtoMessage()    {}
func (*CreateVolumeForReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{4}
}

func (m *CreateVolumeForReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeForReadRequest.Unmarshal(m, b)
}
func (m *CreateVolumeForReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeForReadRequest.Marshal(b, m, deterministic)
}
func (m *CreateVolumeForReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeForReadRequest.Merge(m, src)
}
func (m *CreateVolumeForReadRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeForReadRequest.Size(m)
}
func (m *CreateVolumeForReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeForReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeForReadRequest proto.InternalMessageInfo

func (m *CreateVolumeForReadRequest) GetURI() string {
	if m != nil {
		return m.URI
	}
	return ""
}

// CreateVolumeForReadResponse contains results for CreateVolumeForRead
type CreateVolumeForReadResponse struct {
	// Name of the created PersistentVolume
	VolumeName string `protobuf:"bytes,1,opt,name=VolumeName,proto3" json:"VolumeName,omitempty"`
	// Name of the Node on which the volume is resides
	NodeName string `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	// Local path of the file/dir in the PersistentVolume
	LocalPath string `protobuf:"bytes,3,opt,name=LocalPath,proto3" json:"LocalPath,omitempty"`
	// IsDir indicates if the URI is for a file (false) or a directory (true)
	IsDir                bool     `protobuf:"varint,4,opt,name=IsDir,proto3" json:"IsDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeForReadResponse) Reset()         { *m = CreateVolumeForReadResponse{} }
func (m *CreateVolumeForReadResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeForReadResponse) ProtoMessage()    {}
func (*CreateVolumeForReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e604833c2b457e38, []int{5}
}

func (m *CreateVolumeForReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeForReadResponse.Unmarshal(m, b)
}
func (m *CreateVolumeForReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeForReadResponse.Marshal(b, m, deterministic)
}
func (m *CreateVolumeForReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeForReadResponse.Merge(m, src)
}
func (m *CreateVolumeForReadResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeForReadResponse.Size(m)
}
func (m *CreateVolumeForReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeForReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeForReadResponse proto.InternalMessageInfo

func (m *CreateVolumeForReadResponse) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *CreateVolumeForReadResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateVolumeForReadResponse) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *CreateVolumeForReadResponse) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func init() {
	proto.RegisterType((*CreateVolumeForWriteRequest)(nil), "fs.CreateVolumeForWriteRequest")
	proto.RegisterType((*CreateVolumeForWriteResponse)(nil), "fs.CreateVolumeForWriteResponse")
	proto.RegisterType((*CreateFileURIRequest)(nil), "fs.CreateFileURIRequest")
	proto.RegisterType((*CreateFileURIResponse)(nil), "fs.CreateFileURIResponse")
	proto.RegisterType((*CreateVolumeForReadRequest)(nil), "fs.CreateVolumeForReadRequest")
	proto.RegisterType((*CreateVolumeForReadResponse)(nil), "fs.CreateVolumeForReadResponse")
}

func init() { proto.RegisterFile("fs.proto", fileDescriptor_e604833c2b457e38) }

var fileDescriptor_e604833c2b457e38 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x4f, 0xc2, 0x30,
	0x18, 0xce, 0x40, 0x0d, 0xbc, 0x89, 0x89, 0x56, 0x4c, 0xe6, 0x24, 0xb0, 0xec, 0x84, 0x06, 0xb7,
	0x44, 0x7f, 0x81, 0x82, 0x24, 0x4b, 0x0c, 0x9a, 0x19, 0x30, 0x72, 0x2b, 0xf0, 0x0e, 0x06, 0x9b,
	0x9d, 0x6d, 0x39, 0xf0, 0x03, 0xf4, 0xe6, 0x7f, 0x36, 0x6c, 0x43, 0xbe, 0x06, 0x07, 0xb9, 0xad,
	0x7d, 0xfa, 0x3e, 0x7d, 0x3e, 0x56, 0xc8, 0xb9, 0xc2, 0x0c, 0x39, 0x93, 0x8c, 0x64, 0x5c, 0x61,
	0x0c, 0xe0, 0xb2, 0xc6, 0x91, 0x4a, 0x6c, 0x33, 0x7f, 0x12, 0x60, 0x83, 0xf1, 0x37, 0xee, 0x49,
	0x74, 0xf0, 0x73, 0x82, 0x42, 0x92, 0x2a, 0x9c, 0x3e, 0x0a, 0xe9, 0x05, 0x54, 0x62, 0xbf, 0x46,
	0x43, 0xda, 0xf3, 0xe4, 0x54, 0x55, 0x74, 0xa5, 0x92, 0x75, 0x36, 0x01, 0xa2, 0x41, 0xae, 0xc9,
	0xfa, 0xd8, 0xa4, 0x01, 0xaa, 0x19, 0x5d, 0xa9, 0xe4, 0x9d, 0xbf, 0xb5, 0xd1, 0x81, 0x62, 0xfa,
	0x45, 0x22, 0x64, 0x1f, 0x02, 0x49, 0x09, 0x20, 0x46, 0xa2, 0x69, 0x25, 0x9a, 0x5e, 0xda, 0xd9,
	0xc9, 0xfd, 0xad, 0x40, 0x21, 0x26, 0x6f, 0x78, 0x3e, 0xb6, 0x1c, 0x7b, 0x2e, 0x7f, 0x0f, 0x52,
	0x52, 0x84, 0xfc, 0x13, 0xeb, 0x51, 0xff, 0x85, 0xca, 0xa1, 0x9a, 0x8d, 0xc0, 0xc5, 0x06, 0x29,
	0xc0, 0xa1, 0x2d, 0xea, 0x1e, 0x57, 0x0f, 0x74, 0xa5, 0x92, 0x73, 0xe2, 0x85, 0x71, 0x05, 0xe7,
	0x6b, 0x3a, 0x12, 0x77, 0x27, 0x90, 0x6d, 0x39, 0x76, 0xa2, 0x60, 0xf6, 0x69, 0x98, 0xa0, 0xad,
	0xe5, 0xe1, 0x20, 0xed, 0xcf, 0x85, 0x6f, 0x9e, 0xff, 0x51, 0x36, 0x9a, 0x8a, 0x07, 0xf6, 0xcf,
	0xef, 0x3f, 0x56, 0x6f, 0xbf, 0x32, 0x00, 0x33, 0x97, 0xaf, 0x53, 0x21, 0x31, 0x20, 0xef, 0xf3,
	0x06, 0x56, 0xeb, 0x25, 0x65, 0xd3, 0x15, 0xe6, 0x8e, 0x3f, 0x4c, 0xd3, 0xb7, 0x1f, 0x48, 0x9c,
	0xd5, 0xe1, 0x78, 0x25, 0x54, 0xa2, 0x2e, 0x46, 0x56, 0xfb, 0xd6, 0x2e, 0x52, 0x90, 0x84, 0xa5,
	0x0d, 0x67, 0x29, 0xf1, 0x91, 0x52, 0xca, 0xf5, 0x4b, 0x45, 0x68, 0xe5, 0xad, 0x78, 0xcc, 0xfb,
	0x50, 0xed, 0x5c, 0x0f, 0x3c, 0x39, 0x9c, 0x74, 0xcd, 0x1e, 0x0b, 0xac, 0x7b, 0x7f, 0x44, 0xbb,
	0xdc, 0x7e, 0xb6, 0xc6, 0x8c, 0xfa, 0x23, 0x7a, 0xc3, 0x42, 0xe4, 0x54, 0x32, 0x6e, 0x85, 0xe3,
	0x81, 0xe5, 0x8a, 0xee, 0x51, 0xf4, 0xf2, 0xee, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xeb,
	0x8e, 0x3b, 0x85, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileSystemClient is the client API for FileSystem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileSystemClient interface {
	// CreateVolumeForWrite creates a PersistentVolume that can be used to
	// write files to.
	CreateVolumeForWrite(ctx context.Context, in *CreateVolumeForWriteRequest, opts ...grpc.CallOption) (*CreateVolumeForWriteResponse, error)
	// CreateFileURI creates a URI for the given file/dir
	CreateFileURI(ctx context.Context, in *CreateFileURIRequest, opts ...grpc.CallOption) (*CreateFileURIResponse, error)
	// CreateVolumeForRead creates a PersistentVolume for reading a given URI
	CreateVolumeForRead(ctx context.Context, in *CreateVolumeForReadRequest, opts ...grpc.CallOption) (*CreateVolumeForReadResponse, error)
}

type fileSystemClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemClient(cc *grpc.ClientConn) FileSystemClient {
	return &fileSystemClient{cc}
}

func (c *fileSystemClient) CreateVolumeForWrite(ctx context.Context, in *CreateVolumeForWriteRequest, opts ...grpc.CallOption) (*CreateVolumeForWriteResponse, error) {
	out := new(CreateVolumeForWriteResponse)
	err := c.cc.Invoke(ctx, "/fs.FileSystem/CreateVolumeForWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemClient) CreateFileURI(ctx context.Context, in *CreateFileURIRequest, opts ...grpc.CallOption) (*CreateFileURIResponse, error) {
	out := new(CreateFileURIResponse)
	err := c.cc.Invoke(ctx, "/fs.FileSystem/CreateFileURI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemClient) CreateVolumeForRead(ctx context.Context, in *CreateVolumeForReadRequest, opts ...grpc.CallOption) (*CreateVolumeForReadResponse, error) {
	out := new(CreateVolumeForReadResponse)
	err := c.cc.Invoke(ctx, "/fs.FileSystem/CreateVolumeForRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSystemServer is the server API for FileSystem service.
type FileSystemServer interface {
	// CreateVolumeForWrite creates a PersistentVolume that can be used to
	// write files to.
	CreateVolumeForWrite(context.Context, *CreateVolumeForWriteRequest) (*CreateVolumeForWriteResponse, error)
	// CreateFileURI creates a URI for the given file/dir
	CreateFileURI(context.Context, *CreateFileURIRequest) (*CreateFileURIResponse, error)
	// CreateVolumeForRead creates a PersistentVolume for reading a given URI
	CreateVolumeForRead(context.Context, *CreateVolumeForReadRequest) (*CreateVolumeForReadResponse, error)
}

func RegisterFileSystemServer(s *grpc.Server, srv FileSystemServer) {
	s.RegisterService(&_FileSystem_serviceDesc, srv)
}

func _FileSystem_CreateVolumeForWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeForWriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).CreateVolumeForWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.FileSystem/CreateVolumeForWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).CreateVolumeForWrite(ctx, req.(*CreateVolumeForWriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystem_CreateFileURI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileURIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).CreateFileURI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.FileSystem/CreateFileURI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).CreateFileURI(ctx, req.(*CreateFileURIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystem_CreateVolumeForRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeForReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServer).CreateVolumeForRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.FileSystem/CreateVolumeForRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServer).CreateVolumeForRead(ctx, req.(*CreateVolumeForReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystem_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.FileSystem",
	HandlerType: (*FileSystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVolumeForWrite",
			Handler:    _FileSystem_CreateVolumeForWrite_Handler,
		},
		{
			MethodName: "CreateFileURI",
			Handler:    _FileSystem_CreateFileURI_Handler,
		},
		{
			MethodName: "CreateVolumeForRead",
			Handler:    _FileSystem_CreateVolumeForRead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fs.proto",
}
