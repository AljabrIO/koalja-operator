// 
// Copyright Â© 2018 Aljabr, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 

syntax = "proto3";

package pipeline;

option go_package = "github.com/AljabrIO/koalja-operator/pkg/agent/pipeline";

import "github.com/AljabrIO/koalja-operator/pkg/apis/koalja/v1alpha1/generated.proto";
import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";
import "github.com/AljabrIO/koalja-operator/pkg/event/event.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// AgentRegistry is the API covering registration of agents.
service AgentRegistry {
    // Register an instance of a link agent
    rpc RegisterLink(RegisterLinkRequest) returns (google.protobuf.Empty);
    // Register an instance of a task agent
    rpc RegisterTask(RegisterTaskRequest) returns (google.protobuf.Empty);
    // Provide statistics of a link (called by the link)
    rpc PublishLinkStatistics(LinkStatistics) returns (google.protobuf.Empty);
}

message RegisterLinkRequest {
    // Name of the link
    string LinkName = 1;
    // URI of the link
    string URI = 2;
}

message RegisterTaskRequest {
    // Name of the task
    string TaskName = 1;
    // URI of the task
    string URI = 2;
}

message LinkStatistics {
    // Name of the link
    string link_name = 1 [(gogoproto.customname) = "LinkName"];
    // URI of the link
    string uri = 2 [(gogoproto.customname) = "URI"];
    // Number of events waiting in this link before being processed
    int64 events_waiting = 3 [(gogoproto.customname) = "EventsWaiting"];
    // Number of events that are in progress but have not been acknowledged
    int64 events_in_progress = 4 [(gogoproto.customname) = "EventsInProgress"];
    // Number of events that have been processed and acknowledged
    int64 events_acknowledged = 5 [(gogoproto.customname) = "EventsAcknowledged"];
}

// Frontend is the API provided to the pipeline frontend.
service Frontend {
    // GetPipeline returns the pipeline resource.
    rpc GetPipeline(google.protobuf.Empty) returns (github.com.AljabrIO.koalja_operator.pkg.apis.koalja.v1alpha1.PipelineSpec) {
        option (google.api.http) = {
            get: "/v1/pipeline"
        };
    }
    // GetOutputEvents returns all events (resulting from task outputs that
    // are not connected to inputs of other tasks) that match the given filter.
    rpc GetOutputEvents(OutputEventsRequest) returns (OutputEvents) {
        option (google.api.http) = {
            post: "/v1/output/events"
            body: "*"
        };
    }
    // GetLinkStatistics returns statistics for selected (or all) links.
    rpc GetLinkStatistics(GetLinkStatisticsRequest) returns (GetLinkStatisticsResponse) {
        option (google.api.http) = {
            post: "/v1/statistics/links"
            body: "*"
        };
    }
}

message OutputEventsRequest {
    // EventIDs is a list of event IDs.
    // The response will include only events that are (indirectly) related
    // to any of these event IDs. 
    repeated string event_ids = 1 [(gogoproto.customname) = "EventIDs"];
    // TaskNames is a list of names of tasks.
    // The response will include only events that are created by one of these tasks.
    repeated string task_names = 2 [(gogoproto.customname) = "TaskNames"];
    // If set, only events created after this timestamp are returned.
    google.protobuf.Timestamp created_after = 3 [(gogoproto.customname) = "CreatedAfter"];
    // If set, only events created before this timestamp are returned.
    google.protobuf.Timestamp created_before = 4 [(gogoproto.customname) = "CreatedBefore"];
}

message OutputEvents {
    // The selected events
    repeated event.Event Events = 1;
}

message GetLinkStatisticsRequest {
    // LinkNames is a list of names of links to get statistics from.
    // Empty list results in statistics from all links.
    repeated string link_names = 1 [(gogoproto.customname) = "LinkNames", (gogoproto.jsontag) = "link_names,omitempty"];
}

message GetLinkStatisticsResponse {
    // Statistics contains the returned statistics
    repeated LinkStatistics statistics = 1 [(gogoproto.customname) = "Statistics", (gogoproto.jsontag) = "statistics"];
}
