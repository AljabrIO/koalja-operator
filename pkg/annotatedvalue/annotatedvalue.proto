syntax = "proto3";

package annotatedvalue;

option go_package = "github.com/AljabrIO/koalja-operator/pkg/annotatedvalue";

import "github.com/golang/protobuf/ptypes/duration/duration.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";
import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// AnnotatedValuePublisher is the API used to publish annotated values
service AnnotatedValuePublisher {
    // CanPublish returns true if publishing annotated values is allowed.
    rpc CanPublish(CanPublishRequest) returns (CanPublishResponse);
    // Publish a given annotated value (into a link)
    rpc Publish(PublishRequest) returns (PublishResponse);
}

message CanPublishRequest {   
}

message CanPublishResponse {
    // Allowed is true calls to Publish are allowed, false otherwise.
    bool Allowed = 1;
}

message PublishRequest {
    AnnotatedValue AnnotatedValue = 1;
}

message PublishResponse {
}

// AnnotatedValueSource is the API used to subscribe to annotated values
service AnnotatedValueSource {
    // Subscribe to annotated values
    rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
    // Ping keeps a subscription alive
    rpc Ping(PingRequest) returns (google.protobuf.Empty);
    // Close a subscription
    rpc Close(CloseRequest) returns (google.protobuf.Empty);
    // Ask for the next annotated value on a subscription
    rpc Next(NextRequest) returns (NextResponse);
    // Acknowledge the processing of an annotated value
    rpc Ack(AckRequest) returns (google.protobuf.Empty);
}

message SubscribeRequest {
    string ClientID = 1;
}

message Subscription {
    int64 ID = 1;
}

message SubscribeResponse {
    Subscription Subscription = 1;
    google.protobuf.Duration TTL = 2;
}

message PingRequest {
    Subscription Subscription = 1;
}

message CloseRequest {
    Subscription Subscription = 1;
}

message NextRequest {
    Subscription Subscription = 1;
    google.protobuf.Duration WaitTimeout = 2;
}

message NextResponse {
    AnnotatedValue AnnotatedValue = 1;
    bool NoAnnotatedValueYet = 2;
}

message AckRequest {
    Subscription Subscription = 1;
    string AnnotatedValueID = 2;
}

message AnnotatedValue {
    // ID is a unique ID of this annotated value
    string id = 1 [(gogoproto.customname) = "ID"];
    // SourceTask contains the URI of the task that created the annotated value
    string source_task = 2 [(gogoproto.customname) = "SourceTask"];
    // SourceTaskOutput contains the name of the output of the task that created the annotated value
    string source_task_output = 3 [(gogoproto.customname) = "SourceTaskOutput"];
    // Link contains the URI of the Link that published the annotated value
    string link = 4 [(gogoproto.customname) = "Link"];
    // SourceInputs contains zero or more URI's of annotated values sequences that resulted in this annotated value
    repeated AnnotatedValueSourceInput source_inputs = 5 [(gogoproto.customname) = "SourceInputs"];
    // Data contains a URI of the data (payload) of the message
    string data = 6 [(gogoproto.customname) = "Data"];
    // CreatedAt is the creation timestamp of the annotated value
    google.protobuf.Timestamp created_at = 7 [(gogoproto.customname) = "CreatedAt"];
}

message AnnotatedValueSourceInput {
    // IDs of the all annotated values in the source sequence
    repeated string ids = 1 [(gogoproto.customname) = "IDs"]; 
    // Name of the task input on which this sequence of annotated values came in
    string input_name = 2 [(gogoproto.customname) = "InputName"];
}

// AnnotatedValueRegistry is a persistent annotated value store
service AnnotatedValueRegistry {
    // Record the given annotated value in the registry
    rpc Record(AnnotatedValue) returns (google.protobuf.Empty);
    // GetByID returns the annotated value with given ID.
    rpc GetByID(GetByIDRequest) returns (GetResponse);
    // GetByTaskAndData returns the annotated value with given task & data.
    rpc GetByTaskAndData(GetByTaskAndDataRequest) returns (GetResponse);
}

message GetByIDRequest {
    string ID = 1;
}

message GetByTaskAndDataRequest {
    string SourceTask = 1;
    string Data = 2;
}

message GetResponse {
    AnnotatedValue AnnotatedValue = 1;
}
